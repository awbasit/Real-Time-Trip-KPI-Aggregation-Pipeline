name: Deploy Lambda Function

on:
  push:
    branches: [pipeline]

env:
  AWS_REGION: eu-north-1
  LAMBDA_FUNCTION_NAME1: KinesisIngestion
  LAMBDA_FUNCTION_NAME2: aggregate_kpis

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Prepare Stream Lambda Build Directory
      run: |
        cd data-processing/lambda_functions
        mkdir -p build_stream
        pip install -r ../requirements.txt -t build_stream
        cp lambda_function.py build_stream/

    - name: Zip Stream Lambda Function
      run: |
        cd data-processing/lambda_functions/build_stream
        zip -r ../../lambda1.zip .

    - name: Prepare KPI Lambda Build Directory
      run: |
        cd data-processing/lambda_functions
        mkdir -p build_kpi
        pip install -r ../requirements.txt -t build_kpi
        cp aggregate_daily_kpis.py build_kpi/

    - name: Zip KPI Lambda Function
      run: |
        cd data-processing/lambda_functions/build_kpi
        zip -r ../../lambda2.zip .

    - name: Prepare Monitor Lambda Build Directory
      run: |
        cd data-processing/lambda_functions
        mkdir -p build_monitor
        pip install -r ../requirements.txt -t build_monitor
        cp monitor_data_quality.py build_monitor/

    - name: Zip Monitor Lambda Function
      run: |
        cd data-processing/lambda_functions/build_monitor
        zip -r ../../lambda3.zip .

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy Stream Lambda to AWS Lambda
      run: |
        aws lambda update-function-code \
          --function-name $LAMBDA_FUNCTION_NAME1 \
          --zip-file fileb://data-processing/lambda1.zip

    - name: Deploy Aggregate Daily KPIs Lambda to AWS Lambda
      run: |
        aws lambda update-function-code \
          --function-name $LAMBDA_FUNCTION_NAME2 \
          --zip-file fileb://data-processing/lambda2.zip

    - name: Deploy Monitor Lambda to AWS Lambda
      run: |
        aws lambda update-function-code \
          --function-name monitor_data_quality \
          --zip-file fileb://data-processing/lambda3.zip


    - name: Create EventBridge Rule for Daily KPI Aggregation
      run: |
        aws events put-rule \
          --name "DailyAggregateKPI" \
          --schedule-expression "cron(0 0 * * ? *)" \
          --region ${{ env.AWS_REGION }}

    - name: Add Lambda Target to EventBridge Rule
      run: |
        aws events put-targets \
          --rule "DailyAggregateKPI" \
          --targets "[{\"Id\":\"1\",\"Arn\":\"arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:aggregate_kpis\"}]"

    - name: Add Permission for EventBridge to Invoke Lambda
      run: |
        aws lambda add-permission \
          --function-name aggregate_kpis\
          --statement-id "AllowEventBridgeInvoke" \
          --action 'lambda:InvokeFunction' \
          --principal events.amazonaws.com \
          --source-arn "arn:aws:events:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:rule/DailyAggregateKPI"

    - name: Create EventBridge Rule for Daily Data Quality Check
      run: |
        aws events put-rule \
          --name "DailyDataQualityCheck" \
          --schedule-expression "cron(30 0 * * ? *)" \
          --region ${{ env.AWS_REGION }}

    - name: Link Rule to Monitor Lambda
      run: |
        aws events put-targets \
          --rule "DailyDataQualityCheck" \
          --targets "[{\"Id\":\"1\",\"Arn\":\"arn:aws:lambda:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:function:monitor_data_quality\"}]"

    - name: Add Permission for EventBridge to Invoke Monitor Lambda
      run: |
        aws lambda add-permission \
          --function-name monitor_data_quality \
          --statement-id "AllowMonitorInvoke" \
          --action 'lambda:InvokeFunction' \
          --principal events.amazonaws.com \
          --source-arn "arn:aws:events:${{ env.AWS_REGION }}:${{ secrets.AWS_ACCOUNT_ID }}:rule/DailyDataQualityCheck"

